"use strict";(()=>{var e={};e.id=961,e.ids=[961],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},1129:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>x,patchFetch:()=>h,requestAsyncStorage:()=>g,routeModule:()=>d,serverHooks:()=>m,staticGenerationAsyncStorage:()=>l});var o={};t.r(o),t.d(o,{GET:()=>p,POST:()=>u});var a=t(67092),s=t(25932),n=t(94147),i=t(77856);let c=new(t(53524)).PrismaClient;async function u(e){try{let r=await e.json();if(!r.name)return i.NextResponse.json({error:"Category name is required"},{status:400});let t=await c.category.create({data:{name:r.name}});return i.NextResponse.json(t)}catch(e){return console.error("Error creating category:",e),i.NextResponse.json({error:"Error creating category"},{status:500})}}async function p(){try{let e=await c.category.findMany();return i.NextResponse.json(e)}catch(e){return console.error("Error fetching categories:",e),i.NextResponse.json({error:"Error fetching categories"},{status:500})}}let d=new a.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/categories/route",pathname:"/api/categories",filename:"route",bundlePath:"app/api/categories/route"},resolvedPagePath:"C:\\Users\\Lenovo\\Desktop\\doctorcelweb\\doctorcelweb\\src\\app\\api\\categories\\route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:g,staticGenerationAsyncStorage:l,serverHooks:m}=d,x="/api/categories/route";function h(){return(0,n.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:l})}}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),o=r.X(0,[424,965],()=>t(1129));module.exports=o})();