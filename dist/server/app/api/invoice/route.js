"use strict";(()=>{var e={};e.id=813,e.ids=[813],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},96899:(e,t,n)=>{n.r(t),n.d(t,{originalPathname:()=>h,patchFetch:()=>y,requestAsyncStorage:()=>v,routeModule:()=>m,serverHooks:()=>N,staticGenerationAsyncStorage:()=>x});var r={};n.r(r),n.d(r,{DELETE:()=>p,GET:()=>u,PATCH:()=>d,POST:()=>l});var i=n(67092),o=n(25932),a=n(94147),s=n(77856);let c=new(n(53524)).PrismaClient;async function u(){try{let e=await c.invoice.findMany();return s.NextResponse.json(e)}catch(e){return s.NextResponse.json({error:"Error fetching invoices"},{status:500})}}async function l(e){try{let{number:t,total:n,clientId:r,companyInfoId:i,clientName:o,clientAddress:a,clientPhone:u,clientEmail:l,clientTaxId:d}=await e.json(),p=await c.invoice.create({data:{number:t,total:Number(n),clientId:Number(r),companyInfoId:Number(i),clientName:o,clientAddress:a,clientPhone:u,clientEmail:l,clientTaxId:d}});return s.NextResponse.json(p,{status:201})}catch(e){return s.NextResponse.json({error:"Error creating invoice"},{status:500})}}async function d(e){try{let{id:t,...n}=await e.json(),r=await c.invoice.update({where:{id:Number(t)},data:{...n.number&&{number:n.number},...n.total&&{total:Number(n.total)},...n.clientId&&{clientId:Number(n.clientId)},...n.companyInfoId&&{companyInfoId:Number(n.companyInfoId)},...n.clientName&&{clientName:n.clientName},...n.clientAddress&&{clientAddress:n.clientAddress},...n.clientPhone&&{clientPhone:n.clientPhone},...n.clientEmail&&{clientEmail:n.clientEmail},...n.clientTaxId&&{clientTaxId:n.clientTaxId}}});return s.NextResponse.json(r)}catch(e){return s.NextResponse.json({error:"Error updating invoice"},{status:500})}}async function p(e){try{let{id:t}=await e.json();return await c.invoice.delete({where:{id:Number(t)}}),s.NextResponse.json({message:"Invoice deleted successfully"})}catch(e){return s.NextResponse.json({error:"Error deleting invoice"},{status:500})}}let m=new i.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/invoice/route",pathname:"/api/invoice",filename:"route",bundlePath:"app/api/invoice/route"},resolvedPagePath:"C:\\Users\\Lenovo\\Desktop\\doctorcelweb\\doctorcelweb\\src\\app\\api\\invoice\\route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:v,staticGenerationAsyncStorage:x,serverHooks:N}=m,h="/api/invoice/route";function y(){return(0,a.patchFetch)({serverHooks:N,staticGenerationAsyncStorage:x})}}};var t=require("../../../webpack-runtime.js");t.C(e);var n=e=>t(t.s=e),r=t.X(0,[424,965],()=>n(96899));module.exports=r})();