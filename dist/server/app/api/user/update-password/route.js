"use strict";(()=>{var e={};e.id=585,e.ids=[585],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6113:e=>{e.exports=require("crypto")},60796:(e,s,r)=>{r.r(s),r.d(s,{originalPathname:()=>h,patchFetch:()=>f,requestAsyncStorage:()=>m,routeModule:()=>w,serverHooks:()=>x,staticGenerationAsyncStorage:()=>g});var t={};r.r(t),r.d(t,{POST:()=>l});var a=r(67092),o=r(25932),n=r(94147),u=r(77856),p=r(53524),d=r(43604),i=r.n(d);let c=new p.PrismaClient;async function l(e){try{let{email:s,newPassword:r}=await e.json(),t=await i().hash(r,10),a=await c.user.update({where:{email:s},data:{password:t},select:{id:!0,email:!0}});if(!a)return u.NextResponse.json({message:"User not found"},{status:404});return console.log("Password updated successfully for user:",s),console.log("New hashed password:",t),u.NextResponse.json({message:"Password updated successfully",user:a})}catch(e){if(console.error("Password update error:",e),e instanceof Error)return u.NextResponse.json({message:`Error updating password: ${e.message}`},{status:500});return u.NextResponse.json({message:"Unknown error updating password"},{status:500})}finally{await c.$disconnect()}}let w=new a.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/user/update-password/route",pathname:"/api/user/update-password",filename:"route",bundlePath:"app/api/user/update-password/route"},resolvedPagePath:"C:\\Users\\Lenovo\\Desktop\\doctorcelweb\\doctorcelweb\\src\\app\\api\\user\\update-password\\route.ts",nextConfigOutput:"",userland:t}),{requestAsyncStorage:m,staticGenerationAsyncStorage:g,serverHooks:x}=w,h="/api/user/update-password/route";function f(){return(0,n.patchFetch)({serverHooks:x,staticGenerationAsyncStorage:g})}}};var s=require("../../../../webpack-runtime.js");s.C(e);var r=e=>s(s.s=e),t=s.X(0,[424,965,604],()=>r(60796));module.exports=t})();