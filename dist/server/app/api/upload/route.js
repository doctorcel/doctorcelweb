"use strict";(()=>{var e={};e.id=998,e.ids=[998],e.modules={20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},71017:e=>{e.exports=require("path")},7326:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>x,patchFetch:()=>h,requestAsyncStorage:()=>f,routeModule:()=>d,serverHooks:()=>v,staticGenerationAsyncStorage:()=>m});var o={};t.r(o),t.d(o,{POST:()=>c,dynamic:()=>l});var a=t(67092),s=t(25932),i=t(94147),u=t(77856);let n=require("fs/promises");var p=t(71017);let l="force-dynamic";async function c(e){let r=(await e.formData()).get("file");if(!r)return u.NextResponse.json({success:!1,error:"No file uploaded"},{status:400});let t=await r.arrayBuffer(),o=Buffer.from(t),a=(0,p.join)(process.cwd(),"public","uploads");try{await (0,n.mkdir)(a,{recursive:!0})}catch(e){return console.error("Failed to create upload directory:",e),u.NextResponse.json({success:!1,error:"Failed to create upload directory"},{status:500})}let s=`${Date.now()}-${r.name.replace(/\s+/g,"-")}`,i=(0,p.join)(a,s);try{await (0,n.writeFile)(i,o),console.log(`File saved to ${i}`)}catch(e){return console.error("Failed to save file:",e),u.NextResponse.json({success:!1,error:"Failed to save file"},{status:500})}let l=`/uploads/${s}`;return u.NextResponse.json({success:!0,url:l})}let d=new a.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/upload/route",pathname:"/api/upload",filename:"route",bundlePath:"app/api/upload/route"},resolvedPagePath:"C:\\Users\\Lenovo\\Desktop\\doctorcelweb\\doctorcelweb\\src\\app\\api\\upload\\route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:f,staticGenerationAsyncStorage:m,serverHooks:v}=d,x="/api/upload/route";function h(){return(0,i.patchFetch)({serverHooks:v,staticGenerationAsyncStorage:m})}}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),o=r.X(0,[424,965],()=>t(7326));module.exports=o})();