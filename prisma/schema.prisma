generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Warehouse {
  id           Int           @id @default(autoincrement())
  name         String
  description  String?
  articles     Article[]
  invoices     Invoice[]
  techServices TechService[]
}

enum Visibility {
  ENABLED
  DISABLED
}

enum ActiveStatus {
  ENABLED
  DISABLED
}

model Article {
  id              Int           @id @default(autoincrement())
  name            String
  description     String
  price           Float
  categoryId      Int
  camera          String?
  createdAt       DateTime      @default(now())
  price12         Float?
  price16         Float?
  Initial         Float?
  price8          Float?
  processor       String?
  ram             String?
  storage         String?
  updatedAt       DateTime      @updatedAt
  imageUrl1       String?
  imageUrl2       String?
  imageUrl3       String?
  imageUrl4       String?
  warehouseId     Int
  brand           String?
  frontCamera     String?
  screenSize      String?
  batteryCapacity String?
  financialEntity String?
  offerPrice      Float?
  cost            Float         @default(0)
  serialNumber    Int           @default(0)    // Nuevo campo con valor predeterminado 0
  visible         Visibility    @default(DISABLED) // Nuevo campo con enum y valor predeterminado DISABLED
  active          ActiveStatus  @default(ENABLED)  // Nuevo campo con enum y valor predeterminado ENABLED
  category        Category      @relation(fields: [categoryId], references: [id])
  warehouse       Warehouse     @relation(fields: [warehouseId], references: [id])
  InvoiceItem     InvoiceItem[]
}



model Category {
  id            Int            @id @default(autoincrement())
  name          String
  active          ActiveStatus  @default(ENABLED)  // Nuevo campo con enum y valor predeterminado ENABLED
  articles      Article[]
  subcategories Subcategory[]
}

model Subcategory {
  id         Int      @id @default(autoincrement())
  name       String
  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])
}

model Order {
  id        Int      @id @default(autoincrement())
  number    Int      @unique @default(autoincrement()) // Modificado
  createdAt DateTime @default(now())
  total     Float
  status    String
  clientId  Int
  client    Client   @relation(fields: [clientId], references: [id])
}

model TechService {
  id           Int       @id @default(autoincrement())
  createdAt    String  
  status       Status
  deviceType   String
  serialNumber String?
  clientId     Int
  technicianId Int?
  warehouseId  Int
  deliveryDate DateTime? // Nuevo campo
  brand        String?   // Nuevo campo
  color        String?   // Nuevo campo
  observations String?   // Nuevo campo
  password     String?   // Nuevo campo
  active          ActiveStatus  @default(ENABLED)  // Nuevo campo con enum y valor predeterminado ENABLED
  client       Client    @relation(fields: [clientId], references: [id])
  technician   User?      @relation(fields: [technicianId], references: [id])
  warehouse    Warehouse @relation(fields: [warehouseId], references: [id])
}

enum Status {
  EN_REPARACION
  REPARADO
  ENTREGADO
  GARANTIA
  DEVOLUCION
}
model Invoice {
  id            Int           @id @default(autoincrement())
  number        Int           @unique @default(autoincrement()) // Modificado
  date          DateTime      @default(now())
  total         Float
  clientId      Int
  companyInfoId Int?
  clientName    String
  clientAddress String?
  clientPhone   String?
  clientEmail   String?
  clientTaxId   String?
  warehouseId   Int
  client        Client        @relation(fields: [clientId], references: [id])
  companyInfo   CompanyInfo?   @relation(fields: [companyInfoId], references: [id])
  warehouse     Warehouse     @relation(fields: [warehouseId], references: [id])
  active        ActiveStatus  @default(ENABLED)  // Nuevo campo con enum y valor predeterminado ENABLED
  notes         String?        @default("sin nota")
  items         InvoiceItem[]
}

model InvoiceItem {
  id        Int     @id @default(autoincrement())
  invoiceId Int
  articleId Int
  name      String
  quantity  Int
  price     Float
  cost      Float   @default(0)
  subtotal  Float
  discount  Float?  // Nuevo campo
  article   Article @relation(fields: [articleId], references: [id])
  invoice   Invoice @relation(fields: [invoiceId], references: [id])
}

model Client {
  id           Int           @id @default(autoincrement())
  name         String
  email        String?
  phone        String?
  address      String?
  taxId        String?
  documentType String?       // Nuevo campo
  document     String?       // Nuevo campo
  personType   String?       // Nuevo campo
  regime       String?       // Nuevo campo
  country      String?       // Nuevo campo
  department   String?       // Nuevo campo
  city         String?       // Nuevo campo
  invoices     Invoice[]
  orders       Order[]
  techServices TechService[]
}

model User {
  id           Int           @id @default(autoincrement())
  name         String
  email        String        @unique
  password     String
  role         Role
  techServices TechService[]
}

model CompanyInfo {
  id              Int       @id @default(autoincrement())
  name            String
  address         String
  phone           String
  email           String
  taxId           String
  logoUrl         String?   // Nuevo campo
  documentType    String?   // Nuevo campo
  documentNumber  String?   // Nuevo campo
  regime          String?   // Nuevo campo
  city            String?   // Nuevo campo
  department      String?   // Nuevo campo
  country         String?   // Nuevo campo
  website         String?   // Nuevo campo
  invoices        Invoice[]
}

enum Role {
  ADMIN
  SELLER
  TECHNICIAN
}